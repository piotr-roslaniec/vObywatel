{"abi":[{"type":"constructor","inputs":[{"name":"selector","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"SELECTOR","inputs":[],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"mockProve","inputs":[{"name":"claimDigest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"tuple","internalType":"struct Receipt","components":[{"name":"seal","type":"bytes","internalType":"bytes"},{"name":"claimDigest","type":"bytes32","internalType":"bytes32"}]}],"stateMutability":"view"},{"type":"function","name":"mockProve","inputs":[{"name":"imageId","type":"bytes32","internalType":"bytes32"},{"name":"journalDigest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"tuple","internalType":"struct Receipt","components":[{"name":"seal","type":"bytes","internalType":"bytes"},{"name":"claimDigest","type":"bytes32","internalType":"bytes32"}]}],"stateMutability":"view"},{"type":"function","name":"verify","inputs":[{"name":"seal","type":"bytes","internalType":"bytes"},{"name":"imageId","type":"bytes32","internalType":"bytes32"},{"name":"journalDigest","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"view"},{"type":"function","name":"verifyIntegrity","inputs":[{"name":"receipt","type":"tuple","internalType":"struct Receipt","components":[{"name":"seal","type":"bytes","internalType":"bytes"},{"name":"claimDigest","type":"bytes32","internalType":"bytes32"}]}],"outputs":[],"stateMutability":"view"},{"type":"error","name":"SelectorMismatch","inputs":[{"name":"received","type":"bytes4","internalType":"bytes4"},{"name":"expected","type":"bytes4","internalType":"bytes4"}]},{"type":"error","name":"VerificationFailed","inputs":[]}],"bytecode":{"object":"0x60a0604052348015600f57600080fd5b506040516109e13803806109e1833981016040819052602c91603d565b6001600160e01b031916608052606c565b600060208284031215604e57600080fd5b81516001600160e01b031981168114606557600080fd5b9392505050565b60805161094761009a6000396000818160610152818160ee015281816101fa015261025f01526109476000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063053c238d1461005c5780631599ead5146100a15780633a115bb1146100b657806366cf0e4b14610149578063ab750e751461015c575b600080fd5b6100837f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160e01b031990911681526020015b60405180910390f35b6100b46100af3660046106a5565b61016f565b005b61013c6100c43660046106e0565b604080518082019091526060815260006020820152604080518082019091526001600160e01b03197f000000000000000000000000000000000000000000000000000000000000000016606082015260648101839052806084810160408051601f198184030181529190528152602001929092525090565b604051610098919061071d565b61013c610157366004610763565b610189565b6100b461016a366004610785565b6101ba565b61018661017c8280610806565b83602001356101d7565b50565b6040805180820190915260608152600060208201526101b36100c46101ae85856102fc565b610463565b9392505050565b6101d184846101cc6101ae86866102fc565b6101d7565b50505050565b6101e5600460008486610854565b6101ee9161087e565b6001600160e01b0319167f00000000000000000000000000000000000000000000000000000000000000006001600160e01b0319161461029257610236600460008486610854565b61023f9161087e565b604051632e2ce35360e21b81526001600160e01b031991821660048201527f0000000000000000000000000000000000000000000000000000000000000000909116602482015260440160405180910390fd5b60408051602081018390520160408051601f1981840301815291905280516020909101206102c38360048187610854565b6040516102d19291906108b6565b6040518091039020146102f75760405163439cc0cd60e01b815260040160405180910390fd5b505050565b610304610660565b6040518060a0016040528084815260200160028060405161033c907072697363302e53797374656d537461746560781b815260110190565b602060405180830381855afa158015610359573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061037c91906108c6565b60408051602081019290925260009082018190526060820152600160f81b606482015260660160408051601f19818403018152908290526103bc916108df565b602060405180830381855afa1580156103d9573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906103fc91906108c6565b815260200160405180604001604052806000600281111561041f5761041f6108fb565b8152602001600060ff1681525081526020016000801b815260200161045a60405180604001604052808681526020016000801b8152506105c8565b90529392505050565b600060028060405161048d907172697363302e52656365697074436c61696d60701b815260120190565b602060405180830381855afa1580156104aa573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906104cd91906108c6565b606084015184516020860151608087015160408801515160189060028111156104f8576104f86108fb565b60408a810151602090810151825191820199909952908101969096526060860194909452608085019290925260a084015263ffffffff909116901b60e01b6001600160e01b03191660c082015260f89190911b6001600160f81b03191660c4820152600160fa1b60c882015260ca015b60408051601f1981840301815290829052610582916108df565b602060405180830381855afa15801561059f573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906105c291906108c6565b92915050565b60006002806040516105ec906b1c9a5cd8cc0b93dd5d1c1d5d60a21b8152600c0190565b602060405180830381855afa158015610609573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061062c91906108c6565b83516020808601516040805192830194909452928101919091526060810191909152600160f91b6080820152608201610568565b6040805160a08101825260008082526020820152908101610691604080518082019091526000808252602082015290565b815260006020820181905260409091015290565b6000602082840312156106b757600080fd5b813567ffffffffffffffff8111156106ce57600080fd5b8201604081850312156101b357600080fd5b6000602082840312156106f257600080fd5b5035919050565b60005b838110156107145781810151838201526020016106fc565b50506000910152565b60208152600082516040602084015280518060608501526107458160808601602085016106f9565b60209490940151604084015250506080601f909201601f1916010190565b6000806040838503121561077657600080fd5b50508035926020909101359150565b6000806000806060858703121561079b57600080fd5b843567ffffffffffffffff8111156107b257600080fd5b8501601f810187136107c357600080fd5b803567ffffffffffffffff8111156107da57600080fd5b8760208284010111156107ec57600080fd5b602091820198909750908601359560400135945092505050565b6000808335601e1984360301811261081d57600080fd5b83018035915067ffffffffffffffff82111561083857600080fd5b60200191503681900382131561084d57600080fd5b9250929050565b6000808585111561086457600080fd5b8386111561087157600080fd5b5050820193919092039150565b80356001600160e01b031981169060048410156108af576001600160e01b0319600485900360031b81901b82161691505b5092915050565b8183823760009101908152919050565b6000602082840312156108d857600080fd5b5051919050565b600082516108f18184602087016106f9565b9190910192915050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220a5d6e4bb375e37ba581905be4a13106e2b2b1ccb976f0c127b0cc77b905226dc64736f6c634300081a0033","sourceMap":"1285:2531:43:-:0;;;1976:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2015:19:43;;;1285:2531;;14:290:64;83:6;136:2;124:9;115:7;111:23;107:32;104:52;;;152:1;149;142:12;104:52;178:16;;-1:-1:-1;;;;;;223:32:64;;213:43;;203:71;;270:1;267;260:12;203:71;293:5;14:290;-1:-1:-1;;;14:290:64:o;:::-;1285:2531:43;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063053c238d1461005c5780631599ead5146100a15780633a115bb1146100b657806366cf0e4b14610149578063ab750e751461015c575b600080fd5b6100837f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160e01b031990911681526020015b60405180910390f35b6100b46100af3660046106a5565b61016f565b005b61013c6100c43660046106e0565b604080518082019091526060815260006020820152604080518082019091526001600160e01b03197f000000000000000000000000000000000000000000000000000000000000000016606082015260648101839052806084810160408051601f198184030181529190528152602001929092525090565b604051610098919061071d565b61013c610157366004610763565b610189565b6100b461016a366004610785565b6101ba565b61018661017c8280610806565b83602001356101d7565b50565b6040805180820190915260608152600060208201526101b36100c46101ae85856102fc565b610463565b9392505050565b6101d184846101cc6101ae86866102fc565b6101d7565b50505050565b6101e5600460008486610854565b6101ee9161087e565b6001600160e01b0319167f00000000000000000000000000000000000000000000000000000000000000006001600160e01b0319161461029257610236600460008486610854565b61023f9161087e565b604051632e2ce35360e21b81526001600160e01b031991821660048201527f0000000000000000000000000000000000000000000000000000000000000000909116602482015260440160405180910390fd5b60408051602081018390520160408051601f1981840301815291905280516020909101206102c38360048187610854565b6040516102d19291906108b6565b6040518091039020146102f75760405163439cc0cd60e01b815260040160405180910390fd5b505050565b610304610660565b6040518060a0016040528084815260200160028060405161033c907072697363302e53797374656d537461746560781b815260110190565b602060405180830381855afa158015610359573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061037c91906108c6565b60408051602081019290925260009082018190526060820152600160f81b606482015260660160408051601f19818403018152908290526103bc916108df565b602060405180830381855afa1580156103d9573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906103fc91906108c6565b815260200160405180604001604052806000600281111561041f5761041f6108fb565b8152602001600060ff1681525081526020016000801b815260200161045a60405180604001604052808681526020016000801b8152506105c8565b90529392505050565b600060028060405161048d907172697363302e52656365697074436c61696d60701b815260120190565b602060405180830381855afa1580156104aa573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906104cd91906108c6565b606084015184516020860151608087015160408801515160189060028111156104f8576104f86108fb565b60408a810151602090810151825191820199909952908101969096526060860194909452608085019290925260a084015263ffffffff909116901b60e01b6001600160e01b03191660c082015260f89190911b6001600160f81b03191660c4820152600160fa1b60c882015260ca015b60408051601f1981840301815290829052610582916108df565b602060405180830381855afa15801561059f573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906105c291906108c6565b92915050565b60006002806040516105ec906b1c9a5cd8cc0b93dd5d1c1d5d60a21b8152600c0190565b602060405180830381855afa158015610609573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061062c91906108c6565b83516020808601516040805192830194909452928101919091526060810191909152600160f91b6080820152608201610568565b6040805160a08101825260008082526020820152908101610691604080518082019091526000808252602082015290565b815260006020820181905260409091015290565b6000602082840312156106b757600080fd5b813567ffffffffffffffff8111156106ce57600080fd5b8201604081850312156101b357600080fd5b6000602082840312156106f257600080fd5b5035919050565b60005b838110156107145781810151838201526020016106fc565b50506000910152565b60208152600082516040602084015280518060608501526107458160808601602085016106f9565b60209490940151604084015250506080601f909201601f1916010190565b6000806040838503121561077657600080fd5b50508035926020909101359150565b6000806000806060858703121561079b57600080fd5b843567ffffffffffffffff8111156107b257600080fd5b8501601f810187136107c357600080fd5b803567ffffffffffffffff8111156107da57600080fd5b8760208284010111156107ec57600080fd5b602091820198909750908601359560400135945092505050565b6000808335601e1984360301811261081d57600080fd5b83018035915067ffffffffffffffff82111561083857600080fd5b60200191503681900382131561084d57600080fd5b9250929050565b6000808585111561086457600080fd5b8386111561087157600080fd5b5050820193919092039150565b80356001600160e01b031981169060048410156108af576001600160e01b0319600485900360031b81901b82161691505b5092915050565b8183823760009101908152919050565b6000602082840312156108d857600080fd5b5051919050565b600082516108f18184602087016106f9565b9190910192915050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220a5d6e4bb375e37ba581905be4a13106e2b2b1ccb976f0c127b0cc77b905226dc64736f6c634300081a0033","sourceMap":"1285:2531:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1937:32;;;;;;;;-1:-1:-1;;;;;;176:33:64;;;158:52;;146:2;131:18;1937:32:43;;;;;;;;2310:131;;;;;;:::i;:::-;;:::i;:::-;;3652:162;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;3746:61:43;;;;;;;;;-1:-1:-1;;;;;;3771:8:43;3565:33:64;3754:39:43;;;3553:46:64;3615:11;;;3608:27;;;3746:61:43;3651:12:64;;;3754:39:43;;;-1:-1:-1;;3754:39:43;;;;;;;;;3746:61;;3754:39;3746:61;;;;;-1:-1:-1;3739:68:43;3652:162;;;;;;;;:::i;3302:182::-;;;;;;:::i;:::-;;:::i;2085:181::-;;;;;;:::i;:::-;;:::i;2310:131::-;2383:51;2400:12;:7;;:12;:::i;:::-;2414:7;:19;;;2383:16;:51::i;:::-;2310:131;:::o;3302:182::-;-1:-1:-1;;;;;;;;;;;;;;;;;3415:62:43;3425:51;:42;3444:7;3453:13;3425:18;:42::i;:::-;:49;:51::i;3415:62::-;3408:69;3302:182;-1:-1:-1;;;3302:182:43:o;2085:181::-;2184:75;2201:4;;2207:51;:42;2226:7;2235:13;2207:18;:42::i;:51::-;2184:16;:75::i;:::-;2085:181;;;;:::o;2559:660::-;2890:8;2896:1;2890:8;:4;;:8;:::i;:::-;2883:16;;;:::i;:::-;-1:-1:-1;;;;;2871:28:43;;:8;-1:-1:-1;;;;;2871:28:43;;;2867:132;;2957:8;2963:1;2957:8;:4;;:8;:::i;:::-;2950:16;;;:::i;:::-;2922:66;;-1:-1:-1;;;2922:66:43;;-1:-1:-1;;;;;;4541:33:64;;;2922:66:43;;;4523:52:64;2978:8:43;4611:33:64;;;4591:18;;;4584:61;4496:18;;2922:66:43;;;;;;;2867:132;3129:29;;;;;;4785:19:64;;;4820:12;3129:29:43;;;-1:-1:-1;;3129:29:43;;;;;;;;;3119:40;;3129:29;3119:40;;;;3106:8;:4;3111:1;3106:4;;:8;:::i;:::-;3096:19;;;;;;;:::i;:::-;;;;;;;;:63;3092:121;;3182:20;;-1:-1:-1;;;3182:20:43;;;;;;;;;;;3092:121;2559:660;;;:::o;3653:329:37:-;3728:19;;:::i;:::-;3766:209;;;;;;;;3792:7;3766:209;;;;2747:229;5184:27;;;;;-1:-1:-1;;;5326:32:64;;5383:2;5374:12;;5125:267;5184:27:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2763:207;;;;;;5795:19:64;;;;2860:1:37;5830:12:64;;;5823:28;;;5867:12;;;5860:65;-1:-1:-1;;;5941:12:64;;;5934:60;6010:12;;2763:207:37;;;-1:-1:-1;;2763:207:37;;;;;;;;;;2747:229;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3766:209;;;;3851:34;;;;;;;;3860:21;3851:34;;;;;;;;:::i;:::-;;;;;3883:1;3851:34;;;;;3766:209;;;;3907:1;3899:10;;3766:209;;;;3923:42;:33;;;;;;;;3930:13;3923:33;;;;3953:1;3945:10;;3923:33;;;:40;:42::i;:::-;3766:209;;3759:216;3653:329;-1:-1:-1;;;3653:329:37:o;3988:538::-;4054:7;4080:439;2496:28;;;;;-1:-1:-1;;;6658:33:64;;6716:2;6707:12;;6457:268;2496:28:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4186:11;;;;4215:20;;4253:21;;;;4292:12;;;;4353:14;;;;:21;4379:2;;4346:29;;;;;;;;:::i;:::-;4406:14;;;;;:19;;;;;4100:409;;;;;7049:19:64;;;;7084:12;;;7077:28;;;;7121:12;;;7114:28;;;;7158:12;;;7151:28;;;;7195:13;;;7188:29;4346:35:37;;;;;;7274:3:64;7252:16;-1:-1:-1;;;;;;7248:43:64;7233:13;;;7226:66;7327:16;;;;;-1:-1:-1;;;;;;7327:16:64;7308:13;;;7301:66;-1:-1:-1;;;7383:13:64;;;7376:61;7453:13;;4100:409:37;;;;-1:-1:-1;;4100:409:37;;;;;;;;;;4080:439;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4073:446;3988:538;-1:-1:-1;;3988:538:37:o;8067:349::-;8128:7;8154:255;8038:22;;;;;-1:-1:-1;;;7678:27:64;;7730:2;7721:12;;7477:262;8038:22:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8260:20;;8298:24;;;;;8174:225;;;;;;7955:19:64;;;;7990:12;;;7983:28;;;;8027:12;;;8020:28;;;;-1:-1:-1;;;8064:12:64;;;8057:60;8133:12;;8174:225:37;7744:407:64;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;221:387:64:-;308:6;361:2;349:9;340:7;336:23;332:32;329:52;;;377:1;374;367:12;329:52;417:9;404:23;450:18;442:6;439:30;436:50;;;482:1;479;472:12;436:50;505:22;;561:2;543:16;;;539:25;536:45;;;577:1;574;567:12;613:226;672:6;725:2;713:9;704:7;700:23;696:32;693:52;;;741:1;738;731:12;693:52;-1:-1:-1;786:23:64;;613:226;-1:-1:-1;613:226:64:o;844:250::-;929:1;939:113;953:6;950:1;947:13;939:113;;;1029:11;;;1023:18;1010:11;;;1003:39;975:2;968:10;939:113;;;-1:-1:-1;;1086:1:64;1068:16;;1061:27;844:250::o;1099:586::-;1280:2;1269:9;1262:21;1243:4;1318:6;1312:13;1361:4;1356:2;1345:9;1341:18;1334:32;1395:12;1389:19;1444:6;1439:2;1428:9;1424:18;1417:34;1460:86;1539:6;1533:3;1522:9;1518:19;1513:2;1499:12;1495:21;1460:86;:::i;:::-;1602:2;1590:15;;;;1584:22;1577:4;1562:20;;1555:52;-1:-1:-1;;1675:3:64;1668:2;1647:15;;;-1:-1:-1;;1643:29:64;1628:45;1624:55;;1099:586::o;1690:346::-;1758:6;1766;1819:2;1807:9;1798:7;1794:23;1790:32;1787:52;;;1835:1;1832;1825:12;1787:52;-1:-1:-1;;1880:23:64;;;2000:2;1985:18;;;1972:32;;-1:-1:-1;1690:346:64:o;2041:826::-;2129:6;2137;2145;2153;2206:2;2194:9;2185:7;2181:23;2177:32;2174:52;;;2222:1;2219;2212:12;2174:52;2262:9;2249:23;2295:18;2287:6;2284:30;2281:50;;;2327:1;2324;2317:12;2281:50;2350:22;;2403:4;2395:13;;2391:27;-1:-1:-1;2381:55:64;;2432:1;2429;2422:12;2381:55;2472:2;2459:16;2498:18;2490:6;2487:30;2484:50;;;2530:1;2527;2520:12;2484:50;2577:7;2570:4;2561:6;2557:2;2553:15;2549:26;2546:39;2543:59;;;2598:1;2595;2588:12;2543:59;2629:4;2621:13;;;;2653:6;;-1:-1:-1;2713:20:64;;;2700:34;;2831:2;2816:18;2803:32;;-1:-1:-1;2041:826:64;-1:-1:-1;;;2041:826:64:o;2872:521::-;2949:4;2955:6;3015:11;3002:25;3109:2;3105:7;3094:8;3078:14;3074:29;3070:43;3050:18;3046:68;3036:96;;3128:1;3125;3118:12;3036:96;3155:33;;3207:20;;;-1:-1:-1;3250:18:64;3239:30;;3236:50;;;3282:1;3279;3272:12;3236:50;3315:4;3303:17;;-1:-1:-1;3346:14:64;3342:27;;;3332:38;;3329:58;;;3383:1;3380;3373:12;3329:58;2872:521;;;;;:::o;3674:331::-;3779:9;3790;3832:8;3820:10;3817:24;3814:44;;;3854:1;3851;3844:12;3814:44;3883:6;3873:8;3870:20;3867:40;;;3903:1;3900;3893:12;3867:40;-1:-1:-1;;3929:23:64;;;3974:25;;;;;-1:-1:-1;3674:331:64:o;4010:338::-;4130:19;;-1:-1:-1;;;;;;4167:29:64;;;4216:1;4208:10;;4205:137;;;-1:-1:-1;;;;;;4277:1:64;4273:11;;;4270:1;4266:19;4262:46;;;4254:55;;4250:82;;-1:-1:-1;4205:137:64;;4010:338;;;;:::o;4843:277::-;5032:6;5024;5019:3;5006:33;4988:3;5058:16;;5083:13;;;5058:16;4843:277;-1:-1:-1;4843:277:64:o;5397:184::-;5467:6;5520:2;5508:9;5499:7;5495:23;5491:32;5488:52;;;5536:1;5533;5526:12;5488:52;-1:-1:-1;5559:16:64;;5397:184;-1:-1:-1;5397:184:64:o;6033:287::-;6162:3;6200:6;6194:13;6216:66;6275:6;6270:3;6263:4;6255:6;6251:17;6216:66;:::i;:::-;6298:16;;;;;6033:287;-1:-1:-1;;6033:287:64:o;6325:127::-;6386:10;6381:3;6377:20;6374:1;6367:31;6417:4;6414:1;6407:15;6441:4;6438:1;6431:15","linkReferences":{},"immutableReferences":{"45026":[{"start":97,"length":32},{"start":238,"length":32},{"start":506,"length":32},{"start":607,"length":32}]}},"methodIdentifiers":{"SELECTOR()":"053c238d","mockProve(bytes32)":"3a115bb1","mockProve(bytes32,bytes32)":"66cf0e4b","verify(bytes,bytes32,bytes32)":"ab750e75","verifyIntegrity((bytes,bytes32))":"1599ead5"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"received\",\"type\":\"bytes4\"},{\"internalType\":\"bytes4\",\"name\":\"expected\",\"type\":\"bytes4\"}],\"name\":\"SelectorMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VerificationFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SELECTOR\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimDigest\",\"type\":\"bytes32\"}],\"name\":\"mockProve\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"seal\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"claimDigest\",\"type\":\"bytes32\"}],\"internalType\":\"struct Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"imageId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"journalDigest\",\"type\":\"bytes32\"}],\"name\":\"mockProve\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"seal\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"claimDigest\",\"type\":\"bytes32\"}],\"internalType\":\"struct Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"seal\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"imageId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"journalDigest\",\"type\":\"bytes32\"}],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"seal\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"claimDigest\",\"type\":\"bytes32\"}],\"internalType\":\"struct Receipt\",\"name\":\"receipt\",\"type\":\"tuple\"}],\"name\":\"verifyIntegrity\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"mockProve(bytes32)\":{\"details\":\"You can calculate the claimDigest from a ReceiptClaim by using ReceiptClaimLib.\"},\"verify(bytes,bytes32,bytes32)\":{\"details\":\"This method additionally ensures that the input hash is all-zeros (i.e. no committed input), the exit code is (Halted, 0), and there are no assumptions (i.e. the receipt is unconditional).\",\"params\":{\"imageId\":\"The identifier for the guest program.\",\"journalDigest\":\"The SHA-256 digest of the journal bytes.\",\"seal\":\"The encoded cryptographic proof (i.e. SNARK).\"}},\"verifyIntegrity((bytes,bytes32))\":{\"params\":{\"receipt\":\"The receipt to be verified.\"}}},\"stateVariables\":{\"SELECTOR\":{\"details\":\"A selector is not intended to be collision resistant, in that it is possible to find      two preimages that result in the same selector. This is acceptable since it's purpose      to a route a request among a set of trusted verifiers, and to make errors of sending a      receipt to a mismatching verifiers easier to debug. It is analogous to the ABI      function selectors.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"SelectorMismatch(bytes4,bytes4)\":[{\"notice\":\"Error raised when this verifier receives a receipt with a selector that does not match         its own. The selector value is calculated from the verifier parameters, and so this         usually indicates a mismatch between the version of the prover and this verifier.\"}],\"VerificationFailed()\":[{\"notice\":\"Error raised when cryptographic verification of the zero-knowledge proof fails.\"}]},\"kind\":\"user\",\"methods\":{\"SELECTOR()\":{\"notice\":\"A short key attached to the seal to select the correct verifier implementation.\"},\"mockProve(bytes32)\":{\"notice\":\"Construct a mock receipt for the given claim digest.\"},\"mockProve(bytes32,bytes32)\":{\"notice\":\"Construct a mock receipt for the given image ID and journal.\"},\"verify(bytes,bytes32,bytes32)\":{\"notice\":\"Verify that the given seal is a valid RISC Zero proof of execution with the     given image ID and journal digest. Reverts on failure.\"},\"verifyIntegrity((bytes,bytes32))\":{\"notice\":\"Verify that the given receipt is a valid RISC Zero receipt, ensuring the `seal` is valid a cryptographic proof of the execution with the given `claim`. Reverts on failure.\"}},\"notice\":\"Mock verifier contract for RISC Zero receipts of execution.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"dependencies/risc0-ethereum-1.0.0/src/test/RiscZeroMockVerifier.sol\":\"RiscZeroMockVerifier\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts-5.0.1/=dependencies/@openzeppelin-contracts-5.0.1/\",\":forge-std-1.9.2/src/=dependencies/forge-std-1.9.2/src/\",\":forge-std/=dependencies/forge-std-1.9.2/src/\",\":openzeppelin-contracts/=dependencies/@openzeppelin-contracts-5.0.1/\",\":risc0-ethereum-1.0.0/=dependencies/risc0-ethereum-1.0.0/\",\":vlayer-0.1.0-nightly-20241115-20d6f84/=dependencies/vlayer-0.1.0-nightly-20241115-20d6f84/src/\",\":vlayer-0.1.0/=dependencies/vlayer-0.1.0-nightly-20241115-20d6f84/src/\"]},\"sources\":{\"dependencies/risc0-ethereum-1.0.0/src/IRiscZeroVerifier.sol\":{\"keccak256\":\"0x19341f62c8fe3c0945ebffa4f25d49706ded741af98eaacb7ade824c947f61a4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5d443c7187fd565e25acdfd3df63f14421d06dda0839470cb475546f7c9908c0\",\"dweb:/ipfs/QmeaHPjKmGZBC15iiYKsDCY1k2UY3iYZiNB6Pdc8ow6aVX\"]},\"dependencies/risc0-ethereum-1.0.0/src/Util.sol\":{\"keccak256\":\"0x230a9a58bb2b0c68d4921ecc3672783f941890a2fa3a238dbe5188cfb7658b82\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://586cb5296c564761609ca8aaae5b1fbbdb19ab1e174f7197f602572d9e82b70c\",\"dweb:/ipfs/QmWxDmucSfg3Wgdk1rVcheDHwkziTsXWvKpKSCnxtpQBqg\"]},\"dependencies/risc0-ethereum-1.0.0/src/test/RiscZeroMockVerifier.sol\":{\"keccak256\":\"0x9db38a5523f851c050fcbeccd3bea36405f373ab2c940531900113d97acb7b32\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ce8d2e55cac810e3a7a9fa4274330c45b42d12aeb211dacf9b6191383570e96d\",\"dweb:/ipfs/QmPkov4shEhCLQi54Tkssq5s4p5MjmcNJiArhRVZ5g2zei\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"bytes4","name":"received","type":"bytes4"},{"internalType":"bytes4","name":"expected","type":"bytes4"}],"type":"error","name":"SelectorMismatch"},{"inputs":[],"type":"error","name":"VerificationFailed"},{"inputs":[],"stateMutability":"view","type":"function","name":"SELECTOR","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"bytes32","name":"claimDigest","type":"bytes32"}],"stateMutability":"view","type":"function","name":"mockProve","outputs":[{"internalType":"struct Receipt","name":"","type":"tuple","components":[{"internalType":"bytes","name":"seal","type":"bytes"},{"internalType":"bytes32","name":"claimDigest","type":"bytes32"}]}]},{"inputs":[{"internalType":"bytes32","name":"imageId","type":"bytes32"},{"internalType":"bytes32","name":"journalDigest","type":"bytes32"}],"stateMutability":"view","type":"function","name":"mockProve","outputs":[{"internalType":"struct Receipt","name":"","type":"tuple","components":[{"internalType":"bytes","name":"seal","type":"bytes"},{"internalType":"bytes32","name":"claimDigest","type":"bytes32"}]}]},{"inputs":[{"internalType":"bytes","name":"seal","type":"bytes"},{"internalType":"bytes32","name":"imageId","type":"bytes32"},{"internalType":"bytes32","name":"journalDigest","type":"bytes32"}],"stateMutability":"view","type":"function","name":"verify"},{"inputs":[{"internalType":"struct Receipt","name":"receipt","type":"tuple","components":[{"internalType":"bytes","name":"seal","type":"bytes"},{"internalType":"bytes32","name":"claimDigest","type":"bytes32"}]}],"stateMutability":"view","type":"function","name":"verifyIntegrity"}],"devdoc":{"kind":"dev","methods":{"mockProve(bytes32)":{"details":"You can calculate the claimDigest from a ReceiptClaim by using ReceiptClaimLib."},"verify(bytes,bytes32,bytes32)":{"details":"This method additionally ensures that the input hash is all-zeros (i.e. no committed input), the exit code is (Halted, 0), and there are no assumptions (i.e. the receipt is unconditional).","params":{"imageId":"The identifier for the guest program.","journalDigest":"The SHA-256 digest of the journal bytes.","seal":"The encoded cryptographic proof (i.e. SNARK)."}},"verifyIntegrity((bytes,bytes32))":{"params":{"receipt":"The receipt to be verified."}}},"version":1},"userdoc":{"kind":"user","methods":{"SELECTOR()":{"notice":"A short key attached to the seal to select the correct verifier implementation."},"mockProve(bytes32)":{"notice":"Construct a mock receipt for the given claim digest."},"mockProve(bytes32,bytes32)":{"notice":"Construct a mock receipt for the given image ID and journal."},"verify(bytes,bytes32,bytes32)":{"notice":"Verify that the given seal is a valid RISC Zero proof of execution with the     given image ID and journal digest. Reverts on failure."},"verifyIntegrity((bytes,bytes32))":{"notice":"Verify that the given receipt is a valid RISC Zero receipt, ensuring the `seal` is valid a cryptographic proof of the execution with the given `claim`. Reverts on failure."}},"version":1}},"settings":{"remappings":["@openzeppelin-contracts-5.0.1/=dependencies/@openzeppelin-contracts-5.0.1/","forge-std-1.9.2/src/=dependencies/forge-std-1.9.2/src/","forge-std/=dependencies/forge-std-1.9.2/src/","openzeppelin-contracts/=dependencies/@openzeppelin-contracts-5.0.1/","risc0-ethereum-1.0.0/=dependencies/risc0-ethereum-1.0.0/","vlayer-0.1.0-nightly-20241115-20d6f84/=dependencies/vlayer-0.1.0-nightly-20241115-20d6f84/src/","vlayer-0.1.0/=dependencies/vlayer-0.1.0-nightly-20241115-20d6f84/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"dependencies/risc0-ethereum-1.0.0/src/test/RiscZeroMockVerifier.sol":"RiscZeroMockVerifier"},"evmVersion":"paris","libraries":{}},"sources":{"dependencies/risc0-ethereum-1.0.0/src/IRiscZeroVerifier.sol":{"keccak256":"0x19341f62c8fe3c0945ebffa4f25d49706ded741af98eaacb7ade824c947f61a4","urls":["bzz-raw://5d443c7187fd565e25acdfd3df63f14421d06dda0839470cb475546f7c9908c0","dweb:/ipfs/QmeaHPjKmGZBC15iiYKsDCY1k2UY3iYZiNB6Pdc8ow6aVX"],"license":"Apache-2.0"},"dependencies/risc0-ethereum-1.0.0/src/Util.sol":{"keccak256":"0x230a9a58bb2b0c68d4921ecc3672783f941890a2fa3a238dbe5188cfb7658b82","urls":["bzz-raw://586cb5296c564761609ca8aaae5b1fbbdb19ab1e174f7197f602572d9e82b70c","dweb:/ipfs/QmWxDmucSfg3Wgdk1rVcheDHwkziTsXWvKpKSCnxtpQBqg"],"license":"Apache-2.0"},"dependencies/risc0-ethereum-1.0.0/src/test/RiscZeroMockVerifier.sol":{"keccak256":"0x9db38a5523f851c050fcbeccd3bea36405f373ab2c940531900113d97acb7b32","urls":["bzz-raw://ce8d2e55cac810e3a7a9fa4274330c45b42d12aeb211dacf9b6191383570e96d","dweb:/ipfs/QmPkov4shEhCLQi54Tkssq5s4p5MjmcNJiArhRVZ5g2zei"],"license":"Apache-2.0"}},"version":1},"id":43}